package nju.software.manager.teacher;

import java.sql.Timestamp;
import java.util.Date;

import nju.software.entity.Proposal;
import nju.software.entity.Student;
import nju.software.entity.Suggestion;
import nju.software.entity.Teacher;
import nju.software.service.AccountService;
import nju.software.service.StudentService;
import nju.software.service.SuggestionService;
import nju.software.service.TeacherService;
import nju.software.util.Constants;

import org.apache.commons.lang3.Validate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class TeacherProposalManager {
	@Autowired
	private TeacherService teacherService;
	@Autowired
	private StudentService studentService;
	@Autowired 
	private AccountService accountService;
	@Autowired
	private SuggestionService suggestionService;
	
	private static final Logger LOGGER = LoggerFactory.getLogger(TeacherProposalManager.class);
	
	/**
	 * 教师对开题报告进行审查后，发送会话
	 */
	public void sendSuggestion(Proposal proposal) {
		Student s = studentService.getStudentById(proposal.getStudentId());
		Teacher t = teacherService.getTeacherById(s.getTeacherId());
		
		Validate.notNull(s);
		Validate.notNull(t);
		
		String title = "";
		String content = "";
		if(proposal.getStatus() == Constants.PROPOSAL_PASSED) {
			title = "导师" + t.getTeacherName() + "批准通过了你的开题报告";
			content = "你的开题报告已经被导师" + t.getTeacherName() + "批准通过，" 
					+ "完成中期报告后，请上传";
		} else if(proposal.getStatus() == Constants.PROPOSAL_FAILED) {
			title = "导师" + t.getTeacherName() + "驳回了你的开题报告";
			content = "你的开题报告已经被导师" + t.getTeacherName() + "驳回，" 
					+ "请修改后再次上传，交由导师检查";
		} else {
			return;
		}
		
		Suggestion suggestion = new Suggestion();
		suggestion.setLevel(0);
		suggestion.setPaperId(0);
		
		Integer receiverId = accountService.getAccountByAccountname(s.getStudentNumber()).getAccountId();
		suggestion.setReceiverId(receiverId);
		LOGGER.debug("receiver id: {}", receiverId);
		Timestamp time = new Timestamp(new Date().getTime());
		suggestion.setSuggestTime(time);
		Integer senderId = accountService.getAccountByAccountname(t.getTeacherNumber()).getAccountId();
		suggestion.setUserId(senderId);
		LOGGER.debug("sender id: {}", senderId);
		suggestion.setSenderName("导师" + t.getTeacherName());
		
		suggestion.setSuggestTitle(title);
		suggestion.setSuggestContent(content);
		
		try {
			suggestionService.sendSuggestion(suggestion, null);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
