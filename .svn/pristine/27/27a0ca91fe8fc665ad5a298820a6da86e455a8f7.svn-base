package nju.software.service;

import java.io.File;
import java.util.LinkedHashMap;
import java.util.List;

import nju.software.entity.Accessory;
import nju.software.entity.Suggestion;
import nju.software.entity.SuggestionReply;

public interface SuggestionService {
	/**
	 * 新发起一个会话，或回复一个会话
	 * @param suggestion
	 * 会话内容
	 * @throws Exception 
	 */
	public int addSuggestion(Suggestion s) throws Exception;
	/**
	 * 新增一条回复记录
	 * @param r
	 * @throws Exception
	 */
	public void addSuggestionReply(SuggestionReply r) throws Exception ;
	/**
	 * 更新一条会话记录
	 * @param s
	 * @throws Exception
	 */
	public void updateSuggestion(Suggestion s) throws Exception;
	
	/**
	 * 返回已发出的会话列表
	 * @param userId
	 * 发件人id
	 * @return List<Suggestion>
	 * 会话列表
	 */
	public List<Suggestion> getSuggestionByUserId(int userId);
	
	/**
	 * 返回未读的会话列表
	 * @param receiverId
	 * 收件人id
	 * @return List<Suggestion>
	 * 会话列表
	 */
	public List<Suggestion> getSuggestionByReceiverIdAndLevel(int receiverId,int level);
	
	/**
	 * 返回属于同一个会话的所有回复
	 * @param subjectId
	 * 主题id
	 * @return List<Suggestion>
	 * 会话列表
	 */
	public List<SuggestionReply> getSuggestionBySubjectId(int subjectId);
	
	/**
	 * 根据suggestion_id获得会话
	 * @param suggestionId
	 * 会话id
	 * @return Suggestion
	 * 唯一会话
	 * 
	 */
	public Suggestion getSuggestionBySuggestionId(int suggestionId);
	
	/**
	 * 返回某个用户按照某一类型所有会话（包括发起的和回复的）
	 * @param userId
	 * 用户id
	 * @param type
	 * @return
	 */
	public LinkedHashMap<String,LinkedHashMap<String,List<Suggestion>>> getAllSuggestionMapByUserIdByType(int userId,String type);
	
	/**
	 * 根据suggestionId取会话的附件
	 * @param suggestionId
	 * @return
	 */
	public List<Accessory> getAccessoryBySuggestionId(int suggestionId);
	/**
	 * 添加附件
	 * @param a
	 * @throws Exception
	 */
	public void addAccessory(Accessory a) throws Exception;
	
	/**
	 * 发送会话
	 * @param suggestion
	 * @param file
	 * @throws Exception
	 */
	public void sendSuggestion(Suggestion suggestion, File file) throws Exception;
	
	/**
	 * 创建一条新的会话
	 * @param title
	 * @param content
	 * @param senderId
	 * @param senderName
	 * @param receiverId
	 * @param paperId
	 * @return
	 */
	public Suggestion createSuggestion(String title, String content, Integer senderId, String senderName, 
			Integer receiverId, Integer paperId);
	
}
