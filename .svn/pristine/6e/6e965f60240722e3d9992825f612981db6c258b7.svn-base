package nju.software.controller;

import nju.software.service.MessageService;
import nju.software.web.vo.Msg;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.DestinationVariable;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.messaging.simp.annotation.SubscribeMapping;
import org.springframework.stereotype.Controller;

/**
 * 消息推送控制类
 * @author Cancy
 *
 */
@Controller
public class MessageController {
	@Autowired
	private MessageService messageService;
	
	private static Logger logger = LoggerFactory.getLogger(MessageController.class);
	
	private SimpMessagingTemplate template;
	
	@Autowired
	public MessageController(SimpMessagingTemplate t) {
		this.template = t;
	}
	
	@SubscribeMapping("/initMessage/{accountId}/{teacherId}")
	public Msg getMsg(@DestinationVariable("accountId") int accountId, 
			@DestinationVariable("teacherId") int teacherId) {
		logger.debug("teacher id is {}", teacherId);
		Msg msg = new Msg();
		
		if(teacherId != 0) {
			msg = messageService.getMsg(teacherId, accountId);
		}
		return msg;
	}
	
	@MessageMapping("/getMsg/{accountId}/{teacherId}")
	@SendTo("/getMessage")
	public Msg getMsg2(@DestinationVariable("accountId") int accountId, 
			@DestinationVariable("teacherId") int teacherId) {
		logger.debug("send message");
		Msg msg = new Msg();
		
		if(teacherId != 0) {
			msg = messageService.getMsg(teacherId, accountId);
		}
		logger.debug("message: {}", msg);
		return msg;
		//this.template.convertAndSend("/getMsg", msg);
	}
}
