package nju.software.controller.student;

import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import nju.software.entity.StudentCourseInfo;
import nju.software.jsonmodel.JsonStudentCourseInfo;
import nju.software.service.ReportService;
import nju.software.service.StudentCourseInfoService;
import nju.software.util.JSONUtil;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 学生课程信息控制类
 * @author billjyc
 * @date 2015-3-21
 *
 */
@Controller
public class StudentCourseController {
	private static Logger logger = LoggerFactory.getLogger(StudentCourseController.class);
	private final static String SUCCESS = "success";
	private final static String FAIL = "fail";
	
	@Autowired
	private JSONUtil jsonUtil;
	@Autowired
	private StudentCourseInfoService studentCourseInfoService;
	@Autowired
	private ReportService reportService;
	
	/**
	 * 获得学生的课程信息
	 * @param request
	 * @param response
	 * @param model
	 */
	@RequestMapping(value = "/student/getcourseinfo.do")
	@ResponseBody
	public void getCousreInfoList(HttpServletRequest request,HttpServletResponse response,
			ModelMap model){
		HttpSession session = request.getSession();
		String studentNo = (String) session.getAttribute("actorId");
		List<StudentCourseInfo> courseInfoList = studentCourseInfoService.getInfoByStudentNo(studentNo);
		String result_json = "";
		ArrayList<JsonStudentCourseInfo> JsonCourseInfoList = new ArrayList<JsonStudentCourseInfo>();
		try{
			if(courseInfoList!=null){
				for(int i=0;i<courseInfoList.size();i++){
					StudentCourseInfo courseInfo = courseInfoList.get(i);
					if(courseInfo!=null){
						//JsonStudentCourseInfo JsonStudentCourseInfo = JsonStudentCourseInfo.course2JsonStudentCourseInfo(courseInfo);
						JsonCourseInfoList.add(new JsonStudentCourseInfo(courseInfo));
					}
				}
			}
			result_json = "success";
		}catch(Exception e){
			logger.error("get course list failed: ",e);
			result_json = FAIL;
		}
		JSONArray jsonlist = JSONArray.fromObject(JsonCourseInfoList);
		JSONObject jsonobj = new JSONObject();
		jsonobj.put("list", jsonlist);
		jsonobj.put("result_json", result_json);

		jsonUtil.sendJson(response, jsonobj);
	}
	
	@RequestMapping(value = "/student/exportTranscriptExcel.do")
	@ResponseBody
	@Transactional(rollbackFor=Exception.class)
	public void exportStudentTranscriptExcel(HttpServletRequest request, HttpServletResponse response, ModelMap model) {
		HttpSession session = request.getSession();
		String studentNo=(String) session.getAttribute("actorId");
		HSSFWorkbook wb = reportService.exportTranscriptByStudentNo(studentNo);
		response.setContentType("application/vnd.ms-excel;charset=UTF-8");  
		response.setHeader("Content-disposition", "attachment;filename="+studentNo+" transcript.xls");  
		OutputStream ouputStream;
		try {
			ouputStream = response.getOutputStream();
			wb.write(ouputStream);  
			ouputStream.flush();  
			ouputStream.close();  
		}catch(IOException e){
			e.printStackTrace();
		}  
		String result=SUCCESS;
		JSONObject jsonobj = new JSONObject();
		jsonobj.put("result", result);
		jsonUtil.sendJson(response, jsonobj);
	}
}
