package nju.software.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;
import nju.software.manager.SuggestionManager;
import nju.software.util.JSONUtil;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class SuggestionController {
	@Autowired
	private JSONUtil jsonUtil;
	@Autowired
	private SuggestionManager suggestionManager;

	private static Logger logger = LoggerFactory
			.getLogger(SuggestionController.class);

	/**
	 * 添加一条会话记录，回复
	 * 
	 * @author dinglingjuan
	 * @param studentStr
	 *            - sent by ajax
	 * @param result_json
	 *            执行方法体成功与否的判断信息，用于返回前台展示用户提示信息
	 * @throws JSONException
	 */
	@RequestMapping(value = "/suggestions/addsuggestion.do")
	@ResponseBody
	public void addSuggestion(HttpServletRequest request,
			HttpServletResponse response, ModelMap model, 
			@RequestParam("jsonStr") String suggestionstr) {
		HttpSession session = request.getSession();
		String senderName = (String) session.getAttribute("actorName");
		
		JSONObject jsonobj = suggestionManager.addSuggestion(suggestionstr, senderName);
		jsonUtil.sendJson(response, jsonobj);
	}

	/**
	 * 上传附件
	 * @author dinglingjuan
	 */
	@RequestMapping(value = "/suggestions/submitaffix.do")
	@ResponseBody
	public void submitAffix(HttpServletRequest request,
			HttpServletResponse response, ModelMap model) {
		HttpSession session = request.getSession();
		String userNumber = (String) session.getAttribute("actorId");
		
		JSONObject jsonobj = suggestionManager.submitAffix(request, userNumber);
		jsonUtil.sendJson(response, jsonobj);
	}
	
	/**
	 * 下载附件
	 * @param request
	 * @param response
	 * @param model
	 */
	@RequestMapping(value = "/suggestions/downloadaffix.do", method = RequestMethod.POST)
	@ResponseBody
	public void downloadpaper(HttpServletRequest request,
			HttpServletResponse response, ModelMap model, @RequestParam("path") String path) {
		logger.debug("path: {}", path);
		suggestionManager.downloadAffix(response, path);
	}
	
	/**
	 * 获得未读列表
	 * 
	 * @author dinglingjuan
	 * @param response
	 * @param jsonobj
	 */
	@RequestMapping(value = "/suggestions/needreply.do")
	@ResponseBody
	public void getNeedReplyList(HttpServletRequest request,
			HttpServletResponse response, ModelMap model) {
		HttpSession session = request.getSession();
		int receiverId = (Integer) session.getAttribute("accountId");
		
		JSONObject jsonobj = suggestionManager.getNeedReplyList(receiverId);
		jsonUtil.sendJson(response, jsonobj);
	}
	
	/**
	 * 获得一个会话的详细信息
	 */
	@RequestMapping(value = "/suggestions/getsuggestiondetail.do")
	@ResponseBody
	public void getSuggestionDetail(HttpServletRequest request,
			HttpServletResponse response, ModelMap model){
		int suggestionId = Integer.parseInt(request.getParameter("suggestion_id"));
		
		JSONObject jsonobj = suggestionManager.getSuggestionDetail(suggestionId);
		jsonUtil.sendJson(response, jsonobj);
	}
	
	/**
	 * 已发列表
	 * 
	 * @param response
	 * @param jsonobj
	 */
	@RequestMapping(value = "/suggestions/sendlist.do")
	@ResponseBody
	public void getSendList(HttpServletRequest request,
			HttpServletResponse response, ModelMap model) {
		HttpSession session = request.getSession();
		int userId = (Integer) session.getAttribute("accountId");

		JSONObject jsonobj = suggestionManager.getSendList(userId);
		jsonUtil.sendJson(response, jsonobj);
	}

	@RequestMapping(value = "/suggestions/getSuggestionMap.do")
	@ResponseBody
	public void AllSuggestionMapByUserIdByType(HttpServletRequest request,
			HttpServletResponse response, ModelMap model){
		HttpSession session = request.getSession();
		int userId = (Integer) session.getAttribute("accountId");
		
		JSONObject jsonobj = suggestionManager.allSuggestionMapByUserIdByType(userId);
		jsonUtil.sendJson(response, jsonobj);
	} 
}
