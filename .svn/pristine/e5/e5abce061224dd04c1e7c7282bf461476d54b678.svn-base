2015-03-03 21:01:12,325 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,327 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,328 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,328 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,328 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,328 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,328 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,329 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,329 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,329 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,329 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,330 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,330 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,330 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,330 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,331 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,331 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,331 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,331 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,331 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,331 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,332 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,332 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,332 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,332 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,332 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,332 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,332 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,333 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'FeeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,333 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,334 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,347 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.FeeDAOImpl'
2015-03-03 21:01:12,348 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.HeadTeacherDAOImpl'
2015-03-03 21:01:12,348 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.HeadTeacherDAOImpl'
2015-03-03 21:01:12,349 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.HeadTeacherDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,349 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.HeadTeacherDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,351 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.HeadTeacherDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,352 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,352 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.HeadTeacherDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,352 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,352 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,352 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.HeadTeacherDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,352 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.HeadTeacherDAOImpl@61cd17ac]
2015-03-03 21:01:12,354 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,354 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.HeadTeacher nju.software.dao.impl.HeadTeacherDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,354 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,354 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.HeadTeacherDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,354 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findByNo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,354 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.HeadTeacherDAOImpl.findByNo(java.lang.String)
2015-03-03 21:01:12,355 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,355 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.HeadTeacherDAOImpl.findByName(java.lang.String)
2015-03-03 21:01:12,355 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,355 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,355 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,355 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,355 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,356 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,356 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,356 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,356 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,357 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,358 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,358 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,358 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,358 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,358 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,359 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,359 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,359 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,359 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,360 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,360 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,360 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,360 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,360 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,360 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,361 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,361 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,361 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'HeadTeacherDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,361 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,362 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,363 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,363 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,363 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,378 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.HeadTeacherDAOImpl'
2015-03-03 21:01:12,379 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.InterimReportDAOImpl'
2015-03-03 21:01:12,379 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.InterimReportDAOImpl'
2015-03-03 21:01:12,380 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.InterimReportDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,380 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.InterimReportDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,383 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.InterimReportDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,383 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,383 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.InterimReportDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,383 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,384 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,384 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.InterimReportDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,384 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.InterimReportDAOImpl@a93feda]
2015-03-03 21:01:12,385 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.InterimReportDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,385 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,385 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.InterimReportDAOImpl.count()
2015-03-03 21:01:12,385 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,386 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.InterimReport nju.software.dao.impl.InterimReportDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,387 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,388 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.InterimReportDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,388 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findByStudentId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,388 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.InterimReportDAOImpl.findByStudentId(java.lang.Object)
2015-03-03 21:01:12,388 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.countByTeacher' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,388 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.InterimReportDAOImpl.countByTeacher(java.lang.Object)
2015-03-03 21:01:12,388 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.countByTeacherAndStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,388 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.InterimReportDAOImpl.countByTeacherAndStatus(java.lang.Integer,java.lang.Integer)
2015-03-03 21:01:12,389 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findByAddress' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,389 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.InterimReportDAOImpl.findByAddress(java.lang.Object)
2015-03-03 21:01:12,389 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findByStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,389 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.InterimReportDAOImpl.findByStatus(int,int)
2015-03-03 21:01:12,389 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findByStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,390 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.InterimReportDAOImpl.findByStatus(java.lang.Object)
2015-03-03 21:01:12,390 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,390 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,390 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,390 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,390 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,390 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,391 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,391 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,391 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,391 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,391 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,391 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,391 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,392 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,392 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,392 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,392 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,393 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,393 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,393 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,393 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,393 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,393 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,394 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,394 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,394 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,394 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,394 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,395 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,395 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'InterimReportDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,395 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,396 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,397 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,397 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,397 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,421 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.InterimReportDAOImpl'
2015-03-03 21:01:12,422 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.JudgeDAOImpl'
2015-03-03 21:01:12,422 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.JudgeDAOImpl'
2015-03-03 21:01:12,424 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.JudgeDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,424 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.JudgeDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,432 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.JudgeDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,432 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,432 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.JudgeDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,432 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,433 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,433 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.JudgeDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,433 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.JudgeDAOImpl@2ea84a17]
2015-03-03 21:01:12,435 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,436 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Judge nju.software.dao.impl.JudgeDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,436 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,436 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,437 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByTeacherId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,437 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByTeacherId(java.lang.Object)
2015-03-03 21:01:12,438 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByJudgeAffix' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,438 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByJudgeAffix(java.lang.Object)
2015-03-03 21:01:12,438 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByJudgeContentTeacher' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,439 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByJudgeContentTeacher(java.lang.Object)
2015-03-03 21:01:12,439 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByJudgeContentStudent' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,439 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByJudgeContentStudent(java.lang.Object)
2015-03-03 21:01:12,439 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByPaperIdandTeacherId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,439 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Judge nju.software.dao.impl.JudgeDAOImpl.findByPaperIdandTeacherId(int,int)
2015-03-03 21:01:12,440 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByJudgeResult' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,440 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByJudgeResult(java.lang.Object)
2015-03-03 21:01:12,440 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findByPaperId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,440 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.JudgeDAOImpl.findByPaperId(java.lang.Object)
2015-03-03 21:01:12,441 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,441 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,441 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,441 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,441 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,442 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,443 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,443 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,443 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,444 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,444 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,444 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,444 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,445 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,445 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,445 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,445 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,445 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,445 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,445 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,445 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,446 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,446 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,446 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,446 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,447 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,447 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,447 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,447 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,447 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,448 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'JudgeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,448 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,449 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,450 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,450 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,466 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.JudgeDAOImpl'
2015-03-03 21:01:12,466 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.NoticeDAOImpl'
2015-03-03 21:01:12,466 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.NoticeDAOImpl'
2015-03-03 21:01:12,468 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.NoticeDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,468 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.NoticeDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,470 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.NoticeDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,471 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,471 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.NoticeDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,471 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,471 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,471 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.NoticeDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,471 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.NoticeDAOImpl@49546e3a]
2015-03-03 21:01:12,473 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,473 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Notice nju.software.dao.impl.NoticeDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,473 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,473 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,473 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByNoticeTheme' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,473 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByNoticeTheme(java.lang.Object)
2015-03-03 21:01:12,473 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByNoticeLevel' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,474 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByNoticeLevel(java.lang.Object)
2015-03-03 21:01:12,474 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByNoticePublisherName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,474 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByNoticePublisherName(java.lang.Object)
2015-03-03 21:01:12,474 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByNoticePublisherId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,474 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByNoticePublisherId(java.lang.Object)
2015-03-03 21:01:12,474 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findByNoticeContent' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,475 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.NoticeDAOImpl.findByNoticeContent(java.lang.Object)
2015-03-03 21:01:12,475 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,475 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,476 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,476 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,477 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,477 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,477 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,477 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,477 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,478 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,478 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,478 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,478 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,479 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,479 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,479 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,479 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,479 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,479 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,480 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,480 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,481 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,481 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,481 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,481 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,481 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,481 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,481 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,482 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,482 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'NoticeDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,482 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,483 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,495 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.NoticeDAOImpl'
2015-03-03 21:01:12,495 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.PaperDAOImpl'
2015-03-03 21:01:12,496 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.PaperDAOImpl'
2015-03-03 21:01:12,498 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.PaperDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,498 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.PaperDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,501 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.PaperDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,501 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,501 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.PaperDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,501 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,502 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,502 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.PaperDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,502 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.PaperDAOImpl@73f1f461]
2015-03-03 21:01:12,503 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,503 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.PaperDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,504 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,504 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.PaperDAOImpl.count()
2015-03-03 21:01:12,504 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,504 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Paper nju.software.dao.impl.PaperDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,504 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,504 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,504 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByStudentId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,505 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByStudentId(java.lang.Object)
2015-03-03 21:01:12,505 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.countByTeacher' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,505 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.PaperDAOImpl.countByTeacher(java.lang.Object)
2015-03-03 21:01:12,505 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperTitle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,505 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperTitle(java.lang.Object)
2015-03-03 21:01:12,506 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperState' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,506 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperState(java.lang.Object)
2015-03-03 21:01:12,506 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperVersion' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,506 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperVersion(java.lang.Object)
2015-03-03 21:01:12,506 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperAddress' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,506 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperAddress(java.lang.Object)
2015-03-03 21:01:12,507 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.countByTeacherAndStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,507 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.PaperDAOImpl.countByTeacherAndStatus(java.lang.Object,java.lang.Object)
2015-03-03 21:01:12,507 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperRepetitionRate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,507 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperRepetitionRate(java.lang.Object)
2015-03-03 21:01:12,508 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperAffix2' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,508 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperAffix2(java.lang.Object)
2015-03-03 21:01:12,508 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperGuideAddress' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,508 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperGuideAddress(java.lang.Object)
2015-03-03 21:01:12,508 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findByPaperAffix1' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,509 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.PaperDAOImpl.findByPaperAffix1(java.lang.Object)
2015-03-03 21:01:12,509 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,510 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,510 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,510 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,510 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,511 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,511 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,511 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,511 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,512 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,513 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,513 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,513 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,513 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,514 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,514 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,514 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,514 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,514 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,514 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,514 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,515 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,515 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,515 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,515 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,515 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,515 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,515 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,516 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,516 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'PaperDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,516 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,517 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,533 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.PaperDAOImpl'
2015-03-03 21:01:12,533 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.ProposalDAOImpl'
2015-03-03 21:01:12,534 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.ProposalDAOImpl'
2015-03-03 21:01:12,535 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.ProposalDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,535 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.ProposalDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,539 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.ProposalDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,539 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,539 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.ProposalDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,539 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,540 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,540 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.ProposalDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,540 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.ProposalDAOImpl@4737e9b]
2015-03-03 21:01:12,541 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,541 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.ProposalDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,541 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,541 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.ProposalDAOImpl.count()
2015-03-03 21:01:12,542 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,542 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Proposal nju.software.dao.impl.ProposalDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,544 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,544 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.ProposalDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,544 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findByStudentId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,544 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.ProposalDAOImpl.findByStudentId(java.lang.Object)
2015-03-03 21:01:12,545 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.countByTeacher' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,545 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.ProposalDAOImpl.countByTeacher(java.lang.Object)
2015-03-03 21:01:12,545 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.countByTeacherAndStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,545 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.ProposalDAOImpl.countByTeacherAndStatus(java.lang.Object,java.lang.Object)
2015-03-03 21:01:12,545 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findByProposalAddress' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,546 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.ProposalDAOImpl.findByProposalAddress(java.lang.Object)
2015-03-03 21:01:12,546 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findByStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,546 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.ProposalDAOImpl.findByStatus(int,int)
2015-03-03 21:01:12,546 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findByStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,546 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.ProposalDAOImpl.findByStatus(java.lang.Object)
2015-03-03 21:01:12,547 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,547 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,547 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,547 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,548 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,548 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,548 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,548 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,549 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,549 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,549 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,550 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,550 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,550 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,550 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,551 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,551 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,551 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,551 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,552 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,552 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,552 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,552 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,553 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,553 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,553 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,553 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,554 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,554 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,554 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,555 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'ProposalDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,555 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,556 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,589 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.ProposalDAOImpl'
2015-03-03 21:01:12,590 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl'
2015-03-03 21:01:12,590 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl'
2015-03-03 21:01:12,594 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.StudentCourseInfoDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,594 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,601 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,601 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,602 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.StudentCourseInfoDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,602 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,602 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,602 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,603 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.StudentCourseInfoDAOImpl@5405a851]
2015-03-03 21:01:12,604 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.StudentCourseInfoDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,605 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,605 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.StudentCourseInfo nju.software.dao.impl.StudentCourseInfoDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,605 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,605 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,606 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByCourseName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,606 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByCourseName(java.lang.String)
2015-03-03 21:01:12,607 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findCheckedTranscript' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,607 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findCheckedTranscript(java.util.HashMap)
2015-03-03 21:01:12,608 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByStudentName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,608 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByStudentName(java.lang.String)
2015-03-03 21:01:12,608 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByCourseNo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,608 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByCourseNo(java.lang.String)
2015-03-03 21:01:12,609 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findStudentAssignedCourse' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,609 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findStudentAssignedCourse(java.util.HashMap)
2015-03-03 21:01:12,610 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findUncheckedTranscript' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,610 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findUncheckedTranscript(java.util.HashMap)
2015-03-03 21:01:12,610 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByStudentNo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,610 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByStudentNo(java.lang.String)
2015-03-03 21:01:12,611 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.calculateLimits' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,611 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.HashMap nju.software.dao.impl.StudentCourseInfoDAOImpl.calculateLimits(java.util.HashMap)
2015-03-03 21:01:12,611 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findBySIdCNo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,611 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findBySIdCNo(java.lang.String,java.lang.String)
2015-03-03 21:01:12,611 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByState' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,611 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByState(java.lang.Integer)
2015-03-03 21:01:12,612 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByScore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,612 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByScore(java.lang.Integer)
2015-03-03 21:01:12,612 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findByDate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,612 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentCourseInfoDAOImpl.findByDate(java.lang.Integer)
2015-03-03 21:01:12,612 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,612 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,613 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,613 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,613 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,613 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,613 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,613 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,613 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,614 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,614 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,615 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,615 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,615 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,615 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,615 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,616 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,617 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,617 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,618 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,618 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,618 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,618 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,619 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,619 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,619 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,619 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,620 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,621 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,621 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentCourseInfoDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,621 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,622 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,623 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,644 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.StudentCourseInfoDAOImpl'
2015-03-03 21:01:12,644 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.StudentDAOImpl'
2015-03-03 21:01:12,644 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.StudentDAOImpl'
2015-03-03 21:01:12,646 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.StudentDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,646 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.StudentDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,650 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.StudentDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,650 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,650 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.StudentDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,650 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,651 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,651 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.StudentDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,651 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.StudentDAOImpl@6e75a032]
2015-03-03 21:01:12,652 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.StudentDAOImpl.count()
2015-03-03 21:01:12,653 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,653 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.StudentDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,653 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,653 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Student nju.software.dao.impl.StudentDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,653 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,653 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,653 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByTeacherId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,653 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByTeacherId(java.lang.Object)
2015-03-03 21:01:12,654 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.getStudentByTPNo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,654 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.getStudentByTPNo(java.lang.String)
2015-03-03 21:01:12,654 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentEmail' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,654 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentEmail(java.lang.Object)
2015-03-03 21:01:12,654 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentPhone' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,654 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentPhone(java.lang.Object)
2015-03-03 21:01:12,655 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentPhoneX' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,655 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentPhoneX(java.lang.Object)
2015-03-03 21:01:12,655 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByPropertyLimit' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,655 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByPropertyLimit(java.lang.String,java.lang.Object,java.util.HashMap)
2015-03-03 21:01:12,655 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,656 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentName(java.lang.Object)
2015-03-03 21:01:12,656 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAllWithClass' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,656 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findAllWithClass()
2015-03-03 21:01:12,656 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByNominalTeacherId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,656 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByNominalTeacherId(java.lang.Object)
2015-03-03 21:01:12,656 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentNumber' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,657 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentNumber(java.lang.Object)
2015-03-03 21:01:12,657 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAllWithTeacherLimit' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,657 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findAllWithTeacherLimit(java.util.HashMap)
2015-03-03 21:01:12,658 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByClassname' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,658 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByClassname(java.lang.Object)
2015-03-03 21:01:12,658 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAllWithOutTeacher' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,658 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findAllWithOutTeacher()
2015-03-03 21:01:12,658 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudyTime' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,658 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudyTime(java.lang.Object)
2015-03-03 21:01:12,659 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByStudentGrade' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,659 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByStudentGrade(java.lang.Object)
2015-03-03 21:01:12,660 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByDegreeType' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,660 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByDegreeType(java.lang.Object)
2015-03-03 21:01:12,660 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.calculateLimits' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,660 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.HashMap nju.software.dao.impl.StudentDAOImpl.calculateLimits(java.util.HashMap)
2015-03-03 21:01:12,660 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAllWithOutClass' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,660 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findAllWithOutClass()
2015-03-03 21:01:12,661 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findByScore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,661 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findByScore(java.lang.Object)
2015-03-03 21:01:12,661 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAllLimit' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,661 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentDAOImpl.findAllLimit(java.util.HashMap)
2015-03-03 21:01:12,661 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,661 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,662 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,662 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,662 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,662 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,663 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,663 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,663 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,663 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,664 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,664 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,664 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,664 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,664 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,664 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,665 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,665 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,665 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,665 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,665 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,665 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,665 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,666 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,666 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,666 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,666 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,666 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,666 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,667 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,668 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,689 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.StudentDAOImpl'
2015-03-03 21:01:12,689 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.StudentScoreDAOImpl'
2015-03-03 21:01:12,689 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.StudentScoreDAOImpl'
2015-03-03 21:01:12,690 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.StudentScoreDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,690 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.StudentScoreDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,694 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.StudentScoreDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,695 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,695 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.StudentScoreDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,695 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,696 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,696 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.StudentScoreDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,696 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.StudentScoreDAOImpl@4415c430]
2015-03-03 21:01:12,697 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.StudentScore nju.software.dao.impl.StudentScoreDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,697 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,698 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,698 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByStudentId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,698 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByStudentId(java.lang.Object)
2015-03-03 21:01:12,698 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByExcellent' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,699 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByExcellent(java.lang.Object)
2015-03-03 21:01:12,700 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByMedium' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,700 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByMedium(java.lang.Object)
2015-03-03 21:01:12,700 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByGood' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,700 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByGood(java.lang.Object)
2015-03-03 21:01:12,701 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findByPass' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,701 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.StudentScoreDAOImpl.findByPass(java.lang.Object)
2015-03-03 21:01:12,701 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,701 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,702 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,702 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,702 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,702 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,703 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,703 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,703 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,703 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,704 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,704 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,704 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,704 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,705 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,705 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,705 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,705 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,706 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,706 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,706 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,706 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,706 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,706 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,706 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,707 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'StudentScoreDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,707 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,708 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,709 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,709 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,709 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,709 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,709 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,728 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.StudentScoreDAOImpl'
2015-03-03 21:01:12,728 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.SuggestionDAOImpl'
2015-03-03 21:01:12,728 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.SuggestionDAOImpl'
2015-03-03 21:01:12,730 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.SuggestionDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,730 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.SuggestionDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,736 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.SuggestionDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,738 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,738 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.SuggestionDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,738 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,739 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,739 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.SuggestionDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,739 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.SuggestionDAOImpl@1c8fae9c]
2015-03-03 21:01:12,741 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.SuggestionDAOImpl.count()
2015-03-03 21:01:12,741 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,741 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.SuggestionDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,741 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,743 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Suggestion nju.software.dao.impl.SuggestionDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,744 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,744 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,744 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findBySenderName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,744 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findBySenderName(java.lang.Object)
2015-03-03 21:01:12,745 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByReceiverId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,745 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByReceiverId(java.lang.Object)
2015-03-03 21:01:12,746 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findBySuggestTitle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,746 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findBySuggestTitle(java.lang.Object)
2015-03-03 21:01:12,746 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findAllContanctsByUserId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,746 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.HashMap nju.software.dao.impl.SuggestionDAOImpl.findAllContanctsByUserId(int)
2015-03-03 21:01:12,746 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findBySuggestContent' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,746 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findBySuggestContent(java.lang.Object)
2015-03-03 21:01:12,747 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByReceiverIdByLevel' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,747 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByReceiverIdByLevel(java.lang.Object,java.lang.Object)
2015-03-03 21:01:12,747 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.countNeedReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,747 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.SuggestionDAOImpl.countNeedReply(java.lang.Object)
2015-03-03 21:01:12,747 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByLevel' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,748 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByLevel(java.lang.Object)
2015-03-03 21:01:12,748 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.countByUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,748 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.SuggestionDAOImpl.countByUser(java.lang.Object)
2015-03-03 21:01:12,748 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByUserId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,748 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByUserId(java.lang.Object)
2015-03-03 21:01:12,748 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findBetween2' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,749 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findBetween2(int,int)
2015-03-03 21:01:12,749 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findByPaperId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,749 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionDAOImpl.findByPaperId(java.lang.Object)
2015-03-03 21:01:12,749 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,749 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,750 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,750 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,750 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,750 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,750 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,750 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,750 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,751 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,751 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,751 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,751 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,752 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,752 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,752 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,752 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,753 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,753 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,753 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,753 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,754 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,754 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,754 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,754 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,755 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,755 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,755 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,756 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,756 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,757 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,757 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,758 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,758 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,758 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,758 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,758 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,760 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,761 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,762 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,762 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,762 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,762 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,762 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,782 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.SuggestionDAOImpl'
2015-03-03 21:01:12,782 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.SuggestionReplyDAOImpl'
2015-03-03 21:01:12,782 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.SuggestionReplyDAOImpl'
2015-03-03 21:01:12,784 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.SuggestionReplyDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,784 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.SuggestionReplyDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,788 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.SuggestionReplyDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,789 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,789 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.SuggestionReplyDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,789 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,790 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findBySuggestionId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,790 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.SuggestionReplyDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,790 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.SuggestionReplyDAOImpl@182d75a1]
2015-03-03 21:01:12,791 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionReplyDAOImpl.findBySuggestionId(java.lang.Object)
2015-03-03 21:01:12,795 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,796 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.SuggestionReply nju.software.dao.impl.SuggestionReplyDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,796 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,796 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionReplyDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,796 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findByReplySuggestionId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,796 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.SuggestionReplyDAOImpl.findByReplySuggestionId(java.lang.Object)
2015-03-03 21:01:12,797 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.merge' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,797 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.merge(java.lang.Object)
2015-03-03 21:01:12,797 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,797 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.update(java.lang.Object)
2015-03-03 21:01:12,798 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.clear' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,798 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.clear()
2015-03-03 21:01:12,798 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(org.hibernate.Criteria)
2015-03-03 21:01:12,798 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String,java.lang.Object[])
2015-03-03 21:01:12,798 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.find(java.lang.String)
2015-03-03 21:01:12,798 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.load' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,798 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.load(java.io.Serializable)
2015-03-03 21:01:12,799 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.flush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,799 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.flush()
2015-03-03 21:01:12,799 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.save' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,799 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.io.Serializable nju.software.dao.common.impl.BaseDaoImpl.save(java.lang.Object)
2015-03-03 21:01:12,800 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,800 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.lang.Object)
2015-03-03 21:01:12,800 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,800 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.delete(java.io.Serializable)
2015-03-03 21:01:12,800 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,800 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public void nju.software.dao.common.impl.BaseDaoImpl.create(java.lang.Object)
2015-03-03 21:01:12,801 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,801 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public long nju.software.dao.common.impl.BaseDaoImpl.findCount()
2015-03-03 21:01:12,801 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,801 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.common.impl.BaseDaoImpl.findAll()
2015-03-03 21:01:12,801 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,801 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.Object nju.software.dao.common.impl.BaseDaoImpl.findById(java.io.Serializable)
2015-03-03 21:01:12,801 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected long nju.software.dao.common.impl.BaseDaoImpl.findCountByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,802 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,802 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria(org.hibernate.criterion.Criterion[])
2015-03-03 21:01:12,802 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'SuggestionReplyDAOImpl.createCriteria' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,802 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public org.hibernate.Criteria nju.software.dao.common.impl.BaseDaoImpl.createCriteria()
2015-03-03 21:01:12,802 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int)
2015-03-03 21:01:12,802 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(org.hibernate.Criteria,int,int)
2015-03-03 21:01:12,802 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected java.util.List nju.software.dao.common.impl.BaseDaoImpl.findByPage(java.lang.String,int,int,java.lang.Object[])
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found finalize() method - using NO_OVERRIDE
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2015-03-03 21:01:12,803 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2015-03-03 21:01:12,804 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2015-03-03 21:01:12,818 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Finished creating instance of bean 'nju.software.dao.impl.SuggestionReplyDAOImpl'
2015-03-03 21:01:12,818 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating shared instance of singleton bean 'nju.software.dao.impl.TeacherDAOImpl'
2015-03-03 21:01:12,818 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Creating instance of bean 'nju.software.dao.impl.TeacherDAOImpl'
2015-03-03 21:01:12,820 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Registered injected element on class [nju.software.dao.impl.TeacherDAOImpl]: AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,820 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Eagerly caching bean 'nju.software.dao.impl.TeacherDAOImpl' to allow for resolving potential circular references
2015-03-03 21:01:12,826 DEBUG [org.springframework.beans.factory.annotation.InjectionMetadata] - Processing injected method of bean 'nju.software.dao.impl.TeacherDAOImpl': AutowiredFieldElement for private org.hibernate.SessionFactory nju.software.dao.common.impl.BaseDaoImpl.sessionFactory
2015-03-03 21:01:12,826 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'sessionFactory'
2015-03-03 21:01:12,826 DEBUG [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - Autowiring by type from bean name 'nju.software.dao.impl.TeacherDAOImpl' to bean named 'sessionFactory'
2015-03-03 21:01:12,827 DEBUG [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-03-03 21:01:12,827 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,827 DEBUG [org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator] - Creating implicit proxy for bean 'nju.software.dao.impl.TeacherDAOImpl' with 0 common interceptors and 1 specific interceptors
2015-03-03 21:01:12,827 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Creating CGLIB proxy: target source is SingletonTargetSource for target object [nju.software.dao.impl.TeacherDAOImpl@6a6877c1]
2015-03-03 21:01:12,828 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.TeacherDAOImpl.count()
2015-03-03 21:01:12,829 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.count' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,829 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public int nju.software.dao.impl.TeacherDAOImpl.count(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,829 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,829 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public nju.software.entity.Teacher nju.software.dao.impl.TeacherDAOImpl.findById(java.lang.Integer)
2015-03-03 21:01:12,830 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.findByProperty' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,830 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.TeacherDAOImpl.findByProperty(java.lang.String,java.lang.Object)
2015-03-03 21:01:12,830 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.findByTeacherName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,830 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.TeacherDAOImpl.findByTeacherName(java.lang.Object)
2015-03-03 21:01:12,830 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.calculateLimits' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,830 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.HashMap nju.software.dao.impl.TeacherDAOImpl.calculateLimits(java.util.HashMap)
2015-03-03 21:01:12,830 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.findByTeacherNumber' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,830 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.TeacherDAOImpl.findByTeacherNumber(java.lang.Object)
2015-03-03 21:01:12,831 DEBUG [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] - Adding transactional method 'TeacherDAOImpl.findByTeacherClasses' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2015-03-03 21:01:12,831 DEBUG [org.springframework.aop.framework.CglibAopProxy] - Unable to apply any optimisations to advised method: public java.util.List nju.software.dao.impl.TeacherDAOImpl.findByTeacherClasses(java.lang.Object)
