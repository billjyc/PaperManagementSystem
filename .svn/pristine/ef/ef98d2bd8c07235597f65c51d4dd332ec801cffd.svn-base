<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
    xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" 
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
        http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
        id="WebApp_ID" version="3.1">
	<display-name>Archetype Created Web Application</display-name>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>  
 
 	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/log4j.properties</param-value>
	</context-param>
    <context-param>
  	    <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:/spring-*.xml</param-value>
    </context-param>
    <!-- 根目录 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>web.root</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
	</listener>
  
	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
  
    <!-- log4j -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- Spring 刷新Introspector防止内存泄露 -->
<!-- 	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener> -->
	<!-- end listener --> 
	
	<!--Character Encoding Convert-->   
    <filter>   
        <filter-name>encodingFilter</filter-name>   
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>   
        <init-param>   
            <param-name>encoding</param-name>   
            <param-value>UTF-8</param-value>   
        </init-param> 
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>   
    <filter-mapping>   
        <filter-name>encodingFilter</filter-name>   
        <url-pattern>/*</url-pattern>   
    </filter-mapping>
    
    <filter>
	    <filter-name>deanFilter</filter-name>
	    <filter-class>nju.software.filter.DeanFilter</filter-class>
	    <init-param>
		    <param-name>dean</param-name>
		    <param-value>1</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	     <filter-name>deanFilter</filter-name>
	     <url-pattern>/dean/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>teacherFilter</filter-name>
	    <filter-class>nju.software.filter.TeacherFilter</filter-class>
	    <init-param>
		    <param-name>teacher</param-name>
		    <param-value>2</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	     <filter-name>teacherFilter</filter-name>
	     <url-pattern>/tutor/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>studentFilter</filter-name>
	    <filter-class>nju.software.filter.StudentFilter</filter-class>
	    <init-param>
		    <param-name>student</param-name>
		    <param-value>3</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	     <filter-name>studentFilter</filter-name>
	     <url-pattern>/student/*</url-pattern>
	</filter-mapping>
  
    <!-- 定义DispatcherServlet -->
    <!-- <servlet>
  	    <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
        默认/WEB-INF/[servlet名字]-servlet.xml加载上下文， 
             如果配置了contextConfigLocation参数，
            将使用classpath:/lei-dispatcher-servlet.xml加载上下文
       
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:/lei-dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>  -->
    
    <!-- jbpm5 Mina服务器的启动 -->
	<!-- <servlet>
		<servlet-name>HumanTaskStartupServlet</servlet-name>
		<servlet-class>nju.software.util.DelegatingServletProxy</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
    -->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.MeteorServlet</servlet-class>
        <init-param>
            <param-name>org.atmosphere.servlet</param-name>
            <param-value>org.springframework.web.servlet.DispatcherServlet</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.broadcasterClass</param-name>
            <param-value>org.atmosphere.cpr.DefaultBroadcaster</param-value>
        </init-param>
        
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:/lei-dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
     
	<!-- 拦截匹配的请求，这里所有请求采用名字为lei-dispatcher的DispatcherServlet处理 -->
	<servlet-mapping>
	    <servlet-name>appServlet</servlet-name>
	    <url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<session-config>
        <session-timeout>600</session-timeout>
    </session-config>
 </web-app>
