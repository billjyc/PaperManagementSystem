package nju.software.dao.impl;

import java.util.List;

import nju.software.dao.StudentScoreDAO;
import nju.software.dao.common.impl.BaseDaoImpl;
import nju.software.entity.StudentScore;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

/**
 * A data access object (DAO) providing persistence and search support for
 * StudentScore entities. Transaction control of the save(), update() and
 * delete() operations can directly support Spring container-managed
 * transactions or they can be augmented to handle user-managed Spring
 * transactions. Each of these methods provides additional information for how
 * to configure it for the desired type of transaction control.
 * 
 * @see nju.software.dataobject.StudentScore
 * @author MyEclipse Persistence Tools
 */

@Repository("nju.software.dao.impl.StudentScoreDAOImpl")
public class StudentScoreDAOImpl extends BaseDaoImpl<StudentScore> implements StudentScoreDAO{
	private static final Logger log = LoggerFactory
			.getLogger(StudentScoreDAOImpl.class);
	// property constants
	public static final String STUDENT_ID = "studentId";
	public static final String EXCELLENT = "excellent";
	public static final String GOOD = "good";
	public static final String MEDIUM = "medium";
	public static final String PASS = "pass";

	public StudentScoreDAOImpl(){
		super();
		this.setClazz(StudentScore.class);
	}
	
	public StudentScore findById(java.lang.Integer id) {
		return super.findById(id);
	}

	public List<StudentScore> findByProperty(String propertyName, Object value) {
		return super.findByProperty(propertyName, value);
	}

	public List<StudentScore> findByStudentId(Object studentId) {
		return findByProperty(STUDENT_ID, studentId);
	}

	public List<StudentScore> findByExcellent(Object excellent) {
		return findByProperty(EXCELLENT, excellent);
	}

	public List<StudentScore> findByGood(Object good) {
		return findByProperty(GOOD, good);
	}

	public List<StudentScore> findByMedium(Object medium) {
		return findByProperty(MEDIUM, medium);
	}

	public List<StudentScore> findByPass(Object pass) {
		return findByProperty(PASS, pass);
	}
}